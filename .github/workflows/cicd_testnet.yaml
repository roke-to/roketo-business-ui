name: ci/cd
on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:
  
jobs:
  build:
    runs-on:
      - self-hosted
      - Linux

    strategy:
      matrix:
        app:
          - rocketo-bis-ui
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.REGISTRY_JSON }}
      - name: Get tag name
        uses: little-core-labs/get-git-tag@v3.0.1
        id: tag-name
      - name: Get short sha
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}})"
        id: extract_branch
      - name: Set env
        shell: bash
        run: echo "##[set-output name=env;]$(echo ${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}})"
        id: set_env
      - name: Set docker tags
        env:
          TAG_NAME: ${{ steps.tag-name.outputs.tag }}
          APP: ${{ matrix.app }}
          SHORT_SHA: ${{ steps.short-sha.outputs.sha }}
          GIT_BRANCH: ${{ steps.extract_branch.outputs.branch }}
        run: |
          export GIT_BRANCH=${{env.GIT_BRANCH}}
          echo 'DOCKER_TAGS<<EOF' >> $GITHUB_ENV
          if [ "$GIT_BRANCH" == "master" ] || [ "$GIT_BRANCH" == "main" ]; then
            echo "gcr.io/main-project-354317/$APP:latest"
            echo "gcr.io/main-project-354317/$APP:main-$SHORT_SHA"
            echo 'BUILD_ARG_VITE_NEAR_NETWORK_ID=mainnet' >> $GITHUB_ENV
          elif [ "$TAG_NAME" != "" ]; then
            echo "gcr.io/main-project-354317/$APP:$TAG_NAME"
          else
            echo "gcr.io/main-project-354317/$APP:$GIT_BRANCH"
            echo "gcr.io/main-project-354317/$APP:branch-$GIT_BRANCH-$SHORT_SHA"
            echo 'BUILD_ARG_VITE_NEAR_NETWORK_ID=testnet' >> $GITHUB_ENV
          fi >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: ${{ env.BUILD_ARG_VITE_NEAR_NETWORK_ID }}
          push: true
          tags: ${{ env.DOCKER_TAGS }}

  publish:
    needs:
      - build
    runs-on:
      - self-hosted
      - Linux

    strategy:
      matrix:
        app:
          - rocketo-bis-ui

    steps:
      - uses: actions/checkout@v2
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.REGISTRY_JSON }}
      - name: Get tag name
        uses: little-core-labs/get-git-tag@v3.0.1
        id: tag-name
      - name: Get short sha
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}})"
        id: extract_branch
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: germes.roke.to
          username: ${{ secrets.ROKETO_DEPLOYER_USER }}
          key: ${{ secrets.ROKETO_DEPLOYER_KEY }}
          port: 22
          source: "docker-compose.yaml"
          target: "~/services/"+${{ matrix.app }}+"/"+${{ steps.extract_branch.outputs.branch }}
      - name: deploy
        uses: fifsky/ssh-action@master
        env:
          TAG_NAME: ${{ steps.tag-name.outputs.tag }}
          APP: ${{ matrix.app }}
          SHORT_SHA: ${{ steps.short-sha.outputs.sha }}
          GIT_BRANCH: ${{ steps.extract_branch.outputs.branch }}
        with:
          command: |
            export TAG_NAME=${{env.TAG_NAME}}
            export APP=${{env.APP}}
            export SHORT_SHA=${{env.SHORT_SHA}}
            export GIT_BRANCH=${{env.GIT_BRANCH}}
            cd "~/services/"+$APP+"/"+$GIT_BRANCH
            if [ "$GIT_BRANCH" == "master" ] || [ "$GIT_BRANCH" == "main" ]; then
              export APP_NAME=$APP
              export APP_TAG=main-$SHORT_SHA
              export APP_HOSTNAME="api.roke.biz"
            elif [ "$TAG_NAME" != "" ]; then
              export APP_TAG=main-$SHORT_SHA
            else
              export APP_NAME=$APP-branch-$GIT_BRANCH
              export APP_TAG=branch-$GIT_BRANCH-$SHORT_SHA
              export APP_HOSTNAME=$APP_NAME.germes.roke.to
            fi
            docker-compose up -d
          host: germes.roke.to
          user: ${{ secrets.ROKETO_DEPLOYER_USER }}
          key: ${{ secrets.ROKETO_DEPLOYER_KEY }}
          args: "-tt"

  success:
    needs:
      - build
      - publish

    runs-on:
      - self-hosted
      - Linux

    steps:
      - run: echo "Done"

name: Playwright
on:
  workflow_call:
    inputs:
      package-name:
        required: true
        type: string

jobs:
  e2e:
    timeout-minutes: 60
    runs-on:
      - self-hosted
      - Linux
      - node
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js ‚öôÔ∏è
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: üì• Monorepo install
        uses: ./.github/actions/yarn-nm-install

      - name: Restore packages cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.cache
            ${{ github.workspace }}/**/tsconfig.tsbuildinfo
          key: ${{ runner.os }}-packages-cache-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('packages/**.[jt]sx?', 'packages/**.json') }}
          restore-keys: |
            ${{ runner.os }}-packages-cache-${{ hashFiles('**/yarn.lock') }}-

      - name: Transfer Near for test account
        if: ${{ inputs.package-name }} == 'near-dapp'
        working-directory: ./apps/near-dapp/
        run: node .scripts/transferNearForTestAccount.js

      - name: Install Playwright Browsers
        working-directory: ./apps/${{ inputs.package-name }}/
        run: npx playwright install --with-deps

      - name: Build üîß
        working-directory: ./apps/${{ inputs.package-name }}/
        run: yarn build

      - name: Run Playwright tests
        working-directory: ./apps/${{ inputs.package-name }}/
        run: yarn playwright test

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: ./apps/${{ inputs.package-name }}/playwright-report/
          retention-days: 30
